import React, { Component, CanvasHTMLAttributes } from 'react';
import Confetti, { IConfettiOptions } from './Confetti';
export declare type Ref = HTMLCanvasElement;
export declare type Props = Partial<IConfettiOptions> & CanvasHTMLAttributes<HTMLCanvasElement> & {
    canvasRef: React.RefObject<HTMLCanvasElement>;
};
export declare class ReactConfetti extends Component<Props> {
    static readonly defaultProps: {
        colors: string[];
        initialVelocityX: number;
        initialVelocityY: number;
        gravity: number;
        wind: number;
        friction: number;
        opacity: number;
        drawShape?: ((context: CanvasRenderingContext2D) => void) | undefined;
        run: boolean;
        recycle: boolean;
        numberOfPieces: number;
        debug: boolean;
        tweenFunction: (currentTime: number, currentValue: number, targetValue: number, duration: number, s?: number | undefined) => number;
        tweenDuration: number;
        width: number;
        height: number;
        onConfettiComplete?: ((confettiInstance?: Confetti | undefined) => void) | undefined;
    };
    constructor(props: Props, ...rest: any[]);
    canvas: React.RefObject<HTMLCanvasElement>;
    confetti?: Confetti;
    componentDidMount(): void;
    componentWillReceiveProps(nextProps: Props): void;
    componentWillUnmount(): void;
    render(): JSX.Element;
}
declare const _default: React.ForwardRefExoticComponent<Partial<IConfettiOptions> & React.CanvasHTMLAttributes<HTMLCanvasElement> & {
    canvasRef: React.RefObject<HTMLCanvasElement>;
} & React.RefAttributes<HTMLCanvasElement>>;
export default _default;
