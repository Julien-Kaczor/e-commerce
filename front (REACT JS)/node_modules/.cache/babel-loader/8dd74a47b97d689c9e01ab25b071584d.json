{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  display: block;\\n  font-weight: normal;\\n  text-transform: none;\\n  user-select: none;\\n  margin-top: 4px;\\n  \", \";\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  display: flex;\\n  font-weight: \", \";\\n  letter-spacing: 0.25;\\n  text-transform: uppercase;\\n  white-space: nowrap;\\n  user-select: none;\\n  margin: 0;\\n  \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst OperationalContext_1 = __importDefault(require(\"../OperationalContext/OperationalContext\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst truncate_1 = require(\"../utils/truncate\");\n\nconst SidenavHeaderBase = styled_1.default(\"div\")(({\n  theme,\n  compact\n}) => ({\n  label: \"sidenavheader\",\n  textDecoration: \"none\",\n  width: \"100%\",\n  borderBottom: compact ? 0 : \"1px solid\",\n  borderBottomColor: theme.color.separators.default\n}));\nconst Content = styled_1.default(\"div\")(({\n  theme,\n  onClick,\n  isCondensed,\n  compact,\n  isActive\n}) => ({\n  textDecoration: \"none\",\n  cursor: Boolean(onClick) ? \"pointer\" : \"initial\",\n  position: \"relative\",\n  display: compact ? \"none\" : \"flex\",\n  flexDirection: \"column\",\n  alignItems: \"flex-start\",\n  justifyContent: \"center\",\n  height: isCondensed ? 60 : 73,\n  overflow: \"hidden\",\n  padding: \"0 \".concat(theme.space.content, \"px\"),\n  width: \"100%\",\n  marginBottom: isActive ? -26 : 0\n}));\nconst LabelText = styled_1.default(\"div\")(_templateObject(), ({\n  theme\n}) => theme.font.weight.medium, ({\n  theme\n}) => \"\\n    color: \".concat(theme.color.text.dark, \";\\n    font-size: \").concat(theme.font.size.body, \"px;\\n  \"));\nconst ItemsContainer = styled_1.default(\"div\")({\n  /** @todo add this animation when we move to a JSON-style API for SidenavHeaders */\n  // animation: `${floatIn} .15s forwards ease`,\n  position: \"relative\"\n});\nconst CloseButton = styled_1.default(\"div\")(({\n  theme,\n  onClick\n}) => ({\n  position: \"absolute\",\n  cursor: onClick ? \"pointer\" : \"initial\",\n  display: \"none\",\n  alignItems: \"center\",\n  justifyContent: \"center\",\n  width: 24,\n  height: 24,\n  top: 16,\n  right: theme.space.content,\n  color: theme.color.primary,\n  \".op_sidenavheader:hover &\": {\n    display: \"flex\"\n  },\n  \"& svg\": {\n    width: 16,\n    height: 16\n  }\n}));\nconst Summary = styled_1.default(\"div\")(_templateObject2(), ({\n  theme,\n  isActive,\n  compact\n}) => \"\\n    font-size: \".concat(theme.font.size.fineprint, \"px;\\n    color: \").concat(theme.color.text.lightest, \";\\n    left: \").concat(theme.space.content, \"px;\\n    visibility: \").concat(compact || isActive ? \"hidden\" : \"visible\", \";\\n  \"));\n\nconst SidenavHeader = _a => {\n  var onToggle = _a.onToggle,\n      active = _a.active,\n      to = _a.to,\n      compact = _a.compact,\n      props = __rest(_a, [\"onToggle\", \"active\", \"to\", \"compact\"]);\n\n  const isActive = Boolean(active) || Boolean(compact); // The implementation of this component relies on the fact that it only has valid\n  // `SidenavItem` components as children. The type casting here expresses that assumption.\n\n  const childSidenavItems = React.Children.toArray(props.children) || [];\n  const hasChildLinks = childSidenavItems.some(child => Boolean(child.props.to)); // Actual `to` prop should invalidate if the element has sublinks and is active\n\n  const href = isActive && hasChildLinks ? undefined : to;\n  return React.createElement(OperationalContext_1.default, null, ctx => {\n    return React.createElement(SidenavHeaderBase, Object.assign({}, props, {\n      as: href ? \"a\" : undefined,\n      compact: compact,\n      href: href,\n      onClick: ev => {\n        if (props.onClick) {\n          props.onClick();\n        }\n\n        if (onToggle) {\n          onToggle(!active);\n        }\n\n        if (!utils_1.isModifiedEvent(ev) && ctx.pushState && to && !utils_1.isOutsideLink(to)) {\n          ev.preventDefault(); // Even if the `props.to` prop was ignored, redirect should still happen here\n\n          ctx.pushState(to);\n        }\n      }\n    }), React.createElement(Content, {\n      isActive: isActive,\n      compact: compact,\n      onClick: props.onClick,\n      isCondensed: Boolean(props.condensed)\n    }, React.createElement(LabelText, {\n      compact: compact,\n      isActive: isActive\n    }, props.label, props.icon && React.createElement(Icon_1.default, {\n      name: props.icon,\n      right: true\n    })), !props.condensed && React.createElement(Summary, {\n      compact: compact,\n      isActive: isActive\n    }, truncate_1.truncate(24)(childSidenavItems.map(child => child.props.label).join(\", \")))), childSidenavItems.length > 0 && React.createElement(CloseButton, {\n      onClick: ev => {\n        // Prevent clicks on parent in order to avoid conflicting behavior\n        ev.stopPropagation();\n\n        if (onToggle) {\n          onToggle(!active);\n        }\n      }\n    }, React.createElement(Icon_1.default, {\n      name: active ? \"ChevronUp\" : \"ChevronDown\"\n    })), isActive && React.createElement(ItemsContainer, null, React.Children.map(props.children, child => {\n      /**\n       * If a child manages to get here but does not exist\n       * it will have a value of `null` or `false`, then we\n       * should not attempt to extend it but rather forward it on\n       * as is.\n       */\n      if (!child) {\n        return child;\n      }\n\n      const typedChild = child;\n      return Object.assign({}, typedChild, {\n        props: Object.assign({}, typedChild.props, {\n          compact\n        })\n      });\n    })));\n  });\n};\n\nexports.default = SidenavHeader;","map":null,"metadata":{},"sourceType":"script"}