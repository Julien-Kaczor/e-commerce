{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst color_1 = require(\"../utils/color\");\n\nconst constants_1 = require(\"../utils/constants\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Container = styled_1.default(\"div\")({\n  label: \"avatar\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"flex-start\"\n});\nconst NameContainer = styled_1.default(\"div\")({\n  display: \"block\"\n});\nconst Name = styled_1.default(\"div\")({\n  margin: 0\n});\nconst Title = styled_1.default(\"div\")(({\n  theme\n}) => ({\n  color: theme.color.text.lighter,\n  margin: 0\n}));\nconst Picture = styled_1.default(\"div\")({\n  textTransform: \"uppercase\",\n  borderRadius: \"50%\",\n  display: \"flex\",\n  alignItems: \"center\",\n  justifyContent: \"center\"\n}, ({\n  theme,\n  color,\n  colorAssignment,\n  photo,\n  showName,\n  addBorder,\n  size\n}) => {\n  const defaultColor = theme.color.primary;\n  const fixedBackgroundColor = color ? constants_1.expandColor(theme, color) || defaultColor : defaultColor;\n  const assignedBackgroundColor = colorAssignment ? color_1.colorMapper(theme.color.palette)(colorAssignment) : null;\n  const backgroundColor = assignedBackgroundColor || fixedBackgroundColor;\n  const textColor = utils_1.readableTextColor(backgroundColor, [theme.color.text.default, \"white\"]);\n  const sizeInPixels = size === \"medium\" ? 48 : 32;\n  const fontSizeInPixels = size === \"medium\" ? 13 : 11; // Calculate sizes based on the state of the size prop\n\n  const sizes = {\n    fontSize: fontSizeInPixels,\n    width: sizeInPixels,\n    height: sizeInPixels,\n    flex: \"0 0 \".concat(sizeInPixels, \"px\")\n  }; // Calculate background based on the state of the photo prop\n\n  const background = photo ? {\n    background: \"url(\".concat(photo, \")\"),\n    backgroundSize: \"cover\",\n    backgroundPosition: \"50% 50%\",\n    color: theme.color.white\n  } : {\n    backgroundColor,\n    color: textColor\n  };\n  return Object.assign({}, sizes, background, {\n    marginRight: showName ? theme.space.small : 0,\n    border: addBorder ? \"2px solid white\" : 0\n  });\n});\n\nconst Avatar = props => {\n  const initials = utils_1.getInitials(props.name);\n  return React.createElement(Container, Object.assign({}, props), React.createElement(Picture, {\n    photo: props.photo,\n    color: props.color,\n    colorAssignment: !props.color ? props.name : undefined,\n    showName: props.showName,\n    size: props.size,\n    addBorder: props.addBorder\n  }, props.children ? props.children : props.hideInitials || props.photo ? \"\" : initials), props.showName && React.createElement(NameContainer, null, React.createElement(Name, null, props.name), props.title && React.createElement(Title, null, props.title)));\n};\n\nAvatar.defaultProps = {\n  assignColor: true,\n  addBorder: false,\n  size: \"small\",\n  onClick: () => ({})\n};\nexports.default = Avatar;","map":null,"metadata":{},"sourceType":"script"}