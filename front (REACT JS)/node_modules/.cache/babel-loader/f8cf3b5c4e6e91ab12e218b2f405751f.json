{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst react_window_1 = require(\"react-window\");\n\nconst Message_1 = __importDefault(require(\"../Internals/Message/Message\"));\n\nconst truncate_1 = require(\"../utils/truncate\");\n\nconst DataTable_styled_1 = require(\"./DataTable.styled\");\n\nconst DataTable_util_1 = require(\"./DataTable.util\");\n\nfunction DataTable({\n  columns,\n  rows,\n  rowHeight: initialRowHeight = DataTable_util_1.defaultRowHeight,\n  footer = null,\n  height = 500,\n  width = \"100%\",\n  cellWidth = \"1fr\",\n  maxCharactersInCell = 30,\n  className\n}) {\n  if (rows.length && rows[0].length !== columns.length) {\n    return React.createElement(Message_1.default, {\n      color: \"error\"\n    }, \"Invalid data: `rows` have different cardinality (\", rows[0].length, \") than `columns` (\", columns.length, \"). Please check both props and try again.\");\n  }\n\n  const rowHeight = React.useMemo(() => DataTable_util_1.getRowHeight(initialRowHeight), [initialRowHeight]);\n  const Table = React.useMemo(() => React.memo(_a => {\n    var children = _a.children,\n        rest = __rest(_a, [\"children\"]);\n\n    return React.createElement(React.Fragment, null, React.createElement(DataTable_styled_1.HeadersContainer, Object.assign({}, rest, {\n      numColumns: columns.length,\n      numHeaders: columns[0].length,\n      columnWidth: cellWidth,\n      rowHeight: initialRowHeight\n    }), columns.map((headerRow, rowIndex) => React.createElement(DataTable_styled_1.HeaderRow, {\n      \"data-cy\": \"operational-ui__DataTable-row-header\",\n      rowHeight: initialRowHeight,\n      key: \"op-column-header-\".concat(rowIndex)\n    }, headerRow.map((cell, cellIndex) => React.createElement(DataTable_styled_1.HeaderCell, {\n      rowIndex: cellIndex,\n      cell: rowIndex + 1,\n      rowHeight: initialRowHeight,\n      key: \"op-column-header-cell-\".concat(rowIndex, \"-\").concat(cellIndex),\n      height: rowHeight\n    }, truncate_1.truncate(maxCharactersInCell)(cell)))))), React.createElement(DataTable_styled_1.DataWrapper, {\n      numHeaders: columns[0].length,\n      rowHeight: initialRowHeight\n    }, children));\n  }), [columns, rows, rowHeight]);\n  const numCells = React.useMemo(() => rows[0].length, [rows]);\n  const VirtualRow = React.useMemo(() => React.memo(({\n    style,\n    index\n  }) => React.createElement(DataTable_styled_1.Row, {\n    \"data-cy\": \"operational-ui__DataTable-row\",\n    key: \"op-row-\".concat(index),\n    style: Object.assign({}, style, {\n      height: rowHeight\n    }),\n    cellWidth: cellWidth,\n    numCells: numCells\n  }, rows[index] && rows[index].map((cell, cellIndex) => React.createElement(DataTable_styled_1.Cell, {\n    rowIndex: index,\n    isEvenRow: index % 2 === 0,\n    key: \"op-row-\".concat(index, \"-cell-\").concat(cellIndex),\n    cell: cellIndex + 1,\n    height: rowHeight\n  }, truncate_1.truncate(maxCharactersInCell)(cell))))), [rows, rowHeight]);\n  return React.createElement(DataTable_styled_1.Container, {\n    width: width,\n    className: className\n  }, React.createElement(react_window_1.FixedSizeList, {\n    itemCount: rows.length,\n    itemSize: rowHeight,\n    height: height,\n    width: width,\n    innerElementType: Table,\n\n    /** can't use data-cy or any other prop because of react-window */\n    className: \"operational-ui__DataTable--virtual-scroller\"\n  }, VirtualRow), footer);\n}\n\nexports.DataTable = DataTable;\nexports.default = React.memo(DataTable);","map":null,"metadata":{},"sourceType":"script"}