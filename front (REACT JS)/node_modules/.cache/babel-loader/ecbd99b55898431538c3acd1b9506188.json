{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst OperationalContext_1 = __importDefault(require(\"../OperationalContext/OperationalContext\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"../utils/constants\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst BaseSimpleLink = styled_1.default(\"button\")(({\n  theme,\n  color_,\n  left_,\n  right_\n}) => {\n  const actualColor = color_ ? constants_1.expandColor(theme, color_) || color_ : theme.color.primary;\n  const hoverColor = utils_1.darken(actualColor, 5);\n  return {\n    actualColor,\n    marginTop: 0,\n    marginBottom: 0,\n    marginLeft: right_ ? theme.space.base : 0,\n    marginRight: left_ ? theme.space.base : 0,\n    fontSize: theme.font.size.fineprint,\n    fontFamily: theme.font.family.main,\n    fontWeight: theme.font.weight.medium,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: theme.borderRadius,\n    border: 0,\n    outline: \"none\",\n    position: \"relative\",\n    cursor: \"pointer\",\n    \":focus\": Object.assign({}, utils_1.inputFocus({\n      theme,\n      isError: false\n    })),\n    \":hover\": {\n      color: hoverColor\n    },\n    \"& > svg\": {\n      marginLeft: theme.space.base\n    }\n  };\n});\n\nconst SimpleLink = _a => {\n  var to = _a.to,\n      children = _a.children,\n      icon = _a.icon,\n      color = _a.color,\n      onClick = _a.onClick,\n      left = _a.left,\n      right = _a.right,\n      props = __rest(_a, [\"to\", \"children\", \"icon\", \"color\", \"onClick\", \"left\", \"right\"]);\n\n  return React.createElement(OperationalContext_1.default, null, ctx => React.createElement(BaseSimpleLink, Object.assign({}, props, {\n    as: to ? \"a\" : undefined,\n    left_: left,\n    right_: right,\n    color_: color,\n    href: to,\n    role: \"button\",\n    \"aria-label\": typeof children === \"string\" ? children : undefined,\n    onClick: ev => {\n      if (onClick) {\n        onClick();\n      }\n\n      if (!utils_1.isModifiedEvent(ev) && ctx.pushState && to && !utils_1.isOutsideLink(to)) {\n        ev.preventDefault();\n        ctx.pushState(to);\n      }\n    }\n  }), children, icon && React.createElement(Icon_1.default, {\n    right: true,\n    name: icon,\n    size: 12\n  })));\n};\n\nexports.default = SimpleLink;","map":null,"metadata":{},"sourceType":"script"}