{"ast":null,"code":"\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst moment_1 = __importDefault(require(\"moment\"));\n\nexports.months = [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"];\n/** A range of numbers pre-filled in an array\n * range(5) -> [ 0, 1, 2, 3, 4 ]\n */\n\nexports.range = n => Array.apply(null, {\n  length: n\n}).map((_, i) => i);\n\nexports.changeMonth = (diff, {\n  year,\n  month\n}) => {\n  return {\n    month: month + diff < 0 ? month + diff + 12 : (month + diff) % 12,\n    year: month + diff < 0 ? year - 1 : month + diff > 11 ? year + 1 : year\n  };\n};\n\nexports.toDate = (year, month, day) => \"\".concat(year, \"-\").concat(month < 9 ? \"0\" : \"\").concat(month + 1, \"-\").concat(day < 9 ? \"0\" : \"\").concat(day + 1);\n\nexports.validateDateString = date => {\n  const chunks = date.split(\"-\").map(chunk => Number(chunk));\n\n  if (chunks.length !== 3) {\n    throw new Error(\"Date must be of the format YYYY-MM-DD. You seem to have supplied fewer numbers separated by dashes.\");\n  }\n\n  if (isNaN(chunks[0])) {\n    throw new Error(\"Invalid year. Date must be a valid YYYY-MM-DD format.\");\n  }\n\n  if (isNaN(chunks[1])) {\n    throw new Error(\"Invalid month. Date must be a valid YYYY-MM-DD format.\");\n  }\n\n  if (isNaN(chunks[2])) {\n    throw new Error(\"Invalid day. Date must be a valid YYYY-MM-DD format.\");\n  }\n};\n\nexports.toYearMonthDay = date => {\n  const chunks = date.split(\"-\").map(chunk => Number(chunk));\n  return {\n    year: chunks[0],\n    // Months and days are numbered starting 0 as a state management convenience\n    month: chunks[1] - 1,\n    day: chunks[2] - 1\n  };\n};\n\nexports.monthStartDay = (year, month) => moment_1.default(exports.toDate(year, month, 0)).day();\n\nexports.daysInMonth = (month, year) => {\n  return moment_1.default(exports.toDate(year, month, 2)).daysInMonth();\n};","map":null,"metadata":{},"sourceType":"script"}