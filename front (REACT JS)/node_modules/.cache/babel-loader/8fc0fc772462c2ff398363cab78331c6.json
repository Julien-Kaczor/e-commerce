{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  margin-top: \", \"px;\\n  align-self: flex-end;\\n  height: \", \"px;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Button_1 = __importDefault(require(\"../Button/Button\"));\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst ControlledModal_1 = __importDefault(require(\"./ControlledModal\"));\n\nconst actionsBarSize = 36;\nexports.Actions = styled_1.default(\"div\")(_templateObject(), ({\n  theme\n}) => theme.space.element, actionsBarSize);\nexports.ControlledModalContent = styled_1.default(\"div\")(({\n  fullSize,\n  theme\n}) => Object.assign({\n  // Invert control of spacing from Card to Modal\n  margin: theme.space.element * -1,\n  padding: theme.space.element\n}, fullSize ? {\n  height: \"calc(100% - \".concat(actionsBarSize, \"px)\"),\n  overflowY: \"auto\"\n} : {}));\n\nclass Confirm extends React.Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      options: {}\n    };\n\n    this.closeConfirm = () => {\n      this.setState({\n        options: {}\n      });\n    };\n\n    this.onCancelClick = () => {\n      const _this$state$options = this.state.options,\n            onCancel = _this$state$options.onCancel,\n            state = _this$state$options.state;\n\n      if (onCancel) {\n        onCancel(state);\n      }\n\n      this.closeConfirm();\n    };\n\n    this.onActionClick = () => {\n      const _this$state$options2 = this.state.options,\n            onConfirm = _this$state$options2.onConfirm,\n            state = _this$state$options2.state;\n\n      if (onConfirm) {\n        onConfirm(state);\n      }\n\n      this.closeConfirm();\n    };\n\n    this.setConfirmState = state => {\n      this.setState(prevState => ({\n        options: Object.assign({}, prevState.options, {\n          // No spreading here due to https://github.com/Microsoft/TypeScript/issues/10727\n          state: Object.assign({}, prevState.options.state, state)\n        })\n      }));\n    };\n  }\n\n  openConfirm(options) {\n    this.setState({\n      options\n    });\n  }\n\n  render() {\n    const _this$state$options3 = this.state.options,\n          actionButton = _this$state$options3.actionButton,\n          fullSize = _this$state$options3.fullSize,\n          title = _this$state$options3.title,\n          cancelButton = _this$state$options3.cancelButton,\n          state = _this$state$options3.state,\n          Body = _this$state$options3.body,\n          closeOnOverlayClick = _this$state$options3.closeOnOverlayClick;\n    const isOpen = Boolean(Body);\n    return React.createElement(React.Fragment, null, this.props.children(this.openConfirm.bind(this)), isOpen && React.createElement(ControlledModal_1.default, {\n      type: \"confirm\",\n      fullSize: fullSize,\n      title: title,\n      onClose: this.closeConfirm,\n      closeOnOverlayClick: closeOnOverlayClick\n    }, React.createElement(exports.ControlledModalContent, {\n      fullSize: Boolean(fullSize)\n    }, typeof Body === \"function\" && state ? React.createElement(Body, {\n      setConfirmState: this.setConfirmState,\n      confirmState: state\n    }) : Body), React.createElement(exports.Actions, {\n      \"data-cy\": \"confirm__actions\"\n    }, cancelButton !== null && React.cloneElement(typeof cancelButton === \"function\" ? cancelButton(state) : cancelButton || React.createElement(Button_1.default, null, \"Cancel\"), {\n      onClick: this.onCancelClick\n    }), actionButton !== null && React.cloneElement(typeof actionButton === \"function\" ? actionButton(state) : actionButton || React.createElement(Button_1.default, {\n      color: \"success\"\n    }, \"Confirm\"), {\n      onClick: this.onActionClick\n    }))));\n  }\n\n}\n\nexports.Confirm = Confirm;\nexports.default = Confirm;","map":null,"metadata":{},"sourceType":"script"}