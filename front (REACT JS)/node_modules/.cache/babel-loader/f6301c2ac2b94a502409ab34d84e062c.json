{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst Tooltip_1 = __importDefault(require(\"../Tooltip/Tooltip\"));\n\nconst mixins_1 = require(\"../utils/mixins\");\n\nconst Container = styled_1.default(\"div\")(({\n  left,\n  right,\n  theme\n}) => Object.assign({\n  position: \"relative\",\n  display: \"inline-flex\",\n  verticalAlign: \"middle\",\n  alignItems: \"center\",\n  color: theme.color.text.lightest,\n  marginRight: left ? theme.space.base : 0,\n  marginLeft: right ? theme.space.base : 0\n}, mixins_1.hoverTooltip));\n\nconst HintTooltip = props => {\n  switch (props.position) {\n    case \"right\":\n      return React.createElement(Tooltip_1.default, Object.assign({\n        right: true\n      }, props));\n\n    case \"top\":\n      return React.createElement(Tooltip_1.default, Object.assign({\n        top: true\n      }, props));\n\n    case \"bottom\":\n      return React.createElement(Tooltip_1.default, Object.assign({\n        bottom: true\n      }, props));\n\n    case \"left\":\n      return React.createElement(Tooltip_1.default, Object.assign({\n        left: true\n      }, props));\n\n    case \"smart\":\n      return React.createElement(Tooltip_1.default, Object.assign({\n        smart: true\n      }, props));\n\n    default:\n      return null;\n  }\n};\n\nconst Hint = props => React.createElement(Container, Object.assign({\n  \"aria-label\": typeof props.children === \"string\" ? props.children : undefined\n}, props), React.createElement(Icon_1.default, {\n  name: \"Question\",\n  size: 12\n}), React.createElement(HintTooltip, {\n  position: props.tooltipPosition,\n  textId: props.textId\n}, props.children));\n\nHint.defaultProps = {\n  tooltipPosition: \"left\"\n};\nexports.default = Hint;","map":null,"metadata":{},"sourceType":"script"}