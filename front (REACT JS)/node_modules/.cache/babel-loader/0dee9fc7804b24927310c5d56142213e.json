{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  position: absolute;\\n  top: 0; /* anchor the position to the top so the browser doesn't guess */\\n  right: 0; /* not 12px but 0 because we want a _box_ to attach to the end of Input and not just an X pushed in from the right */\\n\\n  /* We also probably should specify the dimensions of this box */\\n  width: \", \"px;\\n  height: \", \"px;\\n\\n  /* Also, let's center the contents of this box */\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n\\n  cursor: pointer; /* Let the user know this is clickable */\\n\\n  /* We want the user to click on thix _box_, not the icon inside it */\\n  > svg {\\n    pointer-events: none;\\n  }\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  position: relative;\\n  align-items: center;\\n  justify-content: center;\\n  display: inline-flex;\\n  width: 100%;\\n  max-width: \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Input_Button_1 = __importDefault(require(\"./Input.Button\"));\n\nconst Input_constants_1 = require(\"./Input.constants\");\n\nconst width = 360;\nconst Container = styled_1.default(\"div\")(_templateObject(), ({\n  fullWidth\n}) => fullWidth ? \"none\" : \"\".concat(width, \"px\"));\nconst Field = styled_1.default(\"input\")(({\n  theme,\n  disabled,\n  isError,\n  withIconButton,\n  preset,\n  clear\n}) => {\n  const makeBackgroundColor = () => {\n    if (disabled) {\n      return theme.color.disabled;\n    }\n\n    if (preset) {\n      return utils_1.setAlpha(0.1)(theme.color.primary);\n    }\n\n    return theme.color.white;\n  };\n\n  return Object.assign({}, withIconButton ? {\n    borderTopRightRadius: theme.borderRadius,\n    borderBottomRightRadius: theme.borderRadius,\n    marginLeft: -1\n  } : {\n    borderRadius: theme.borderRadius\n  }, {\n    fontSize: theme.font.size.body,\n    width: \"100%\",\n    height: Input_constants_1.height,\n    label: \"input\",\n    flexGrow: 1,\n    padding: \"\".concat(theme.space.small, \"px \").concat(theme.space.medium, \"px\"),\n    opacity: disabled ? 0.6 : 1.0,\n    font: \"inherit\",\n    border: \"1px solid\",\n    borderColor: isError ? theme.color.error : theme.color.border.default,\n    appearance: \"none\",\n    fontWeight: preset ? theme.font.weight.medium : theme.font.weight.regular,\n    color: preset ? theme.color.text.dark : theme.color.text.default,\n    backgroundColor: makeBackgroundColor(),\n    \"::placeholder\": {\n      color: theme.color.text.disabled\n    }\n  }, clear ? {\n    paddingRight: 40\n  } : {}, {\n    \"&:focus\": utils_1.inputFocus({\n      theme,\n      isError\n    })\n  });\n});\nconst ClearButton = styled_1.default(\"div\")(_templateObject2(), Input_constants_1.height, Input_constants_1.height);\n\nconst InputField = _a => {\n  var id = _a.id,\n      hint = _a.hint,\n      fullWidth = _a.fullWidth,\n      inputRef = _a.inputRef,\n      autoFocus = _a.autoFocus,\n      name = _a.name,\n      autoComplete = _a.autoComplete,\n      disabled = _a.disabled,\n      value = _a.value,\n      type = _a.type,\n      onFocus = _a.onFocus,\n      onBlur = _a.onBlur,\n      placeholder = _a.placeholder,\n      error = _a.error,\n      onChange = _a.onChange,\n      preset = _a.preset,\n      label = _a.label,\n      clear = _a.clear,\n      icon = _a.icon,\n      copy = _a.copy,\n      onIconClick = _a.onIconClick,\n      tabIndex = _a.tabIndex,\n      ErrorComponent = _a.errorComponent,\n      props = __rest(_a, [\"id\", \"hint\", \"fullWidth\", \"inputRef\", \"autoFocus\", \"name\", \"autoComplete\", \"disabled\", \"value\", \"type\", \"onFocus\", \"onBlur\", \"placeholder\", \"error\", \"onChange\", \"preset\", \"label\", \"clear\", \"icon\", \"copy\", \"onIconClick\", \"tabIndex\", \"errorComponent\"]);\n\n  const shouldShowIconButton = Boolean(icon) || Boolean(copy);\n\n  const renderButton = () => {\n    if (copy === true) {\n      return React.createElement(Input_Button_1.default, {\n        tabIndex: tabIndex,\n        value: value || \"\",\n        copy: copy\n      });\n    } else {\n      return React.createElement(Input_Button_1.default, {\n        tabIndex: tabIndex,\n        onIconClick: onIconClick,\n        icon: icon,\n        copy: false\n      });\n    }\n  };\n\n  return React.createElement(React.Fragment, null, React.createElement(Container, {\n    fullWidth: fullWidth,\n    withLabel: Boolean(label)\n  }, shouldShowIconButton && renderButton(), React.createElement(Field, Object.assign({\n    ref: inputRef,\n    autoFocus: autoFocus,\n    name: name,\n    disabled: Boolean(disabled),\n    value: value || \"\",\n    type: type,\n    onFocus: onFocus,\n    onBlur: onBlur,\n    placeholder: placeholder,\n    isError: Boolean(error),\n    onChange: ev => {\n      if (onChange) {\n        onChange(ev.currentTarget.value);\n      }\n    },\n    clear: clear,\n    preset: Boolean(preset),\n    id: \"input-field-\".concat(id),\n    withIconButton: shouldShowIconButton,\n    autoComplete: autoComplete\n  }, props)), clear && value && React.createElement(ClearButton, {\n    onClick: clear\n  }, React.createElement(Icon_1.default, {\n    color: \"color.text.lightest\",\n    name: \"No\"\n  })), error && !ErrorComponent ? React.createElement(utils_1.FormFieldError, null, error) : null), error && ErrorComponent ? React.createElement(ErrorComponent, {\n    errorMessage: error\n  }) : null);\n};\n\nexports.default = InputField;","map":null,"metadata":{},"sourceType":"script"}