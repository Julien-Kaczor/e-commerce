{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst OperationalContext_1 = __importDefault(require(\"../OperationalContext/OperationalContext\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst containerStyles = {\n  label: \"breadcrumb\",\n  \"& svg\": {\n    marginLeft: 4\n  }\n};\nconst Container = styled_1.default(\"span\")(containerStyles);\nconst ContainerLink = styled_1.default(\"a\")(containerStyles, ({\n  theme\n}) => ({\n  \"&:link, &:visited\": {\n    color: theme.color.primary,\n    borderBottom: \"1px solid currentColor\",\n    \"&:hover\": {\n      color: utils_1.darken(theme.color.primary, 5)\n    }\n  }\n}));\nconst Content = styled_1.default(\"span\")();\n\nconst Breadcrumb = _a => {\n  var to = _a.to,\n      icon = _a.icon,\n      onClick = _a.onClick,\n      props = __rest(_a, [\"to\", \"icon\", \"onClick\"]);\n\n  const ContainerComponent = to ? ContainerLink : Container;\n  return React.createElement(OperationalContext_1.default, null, ctx => React.createElement(ContainerComponent, Object.assign({}, props, {\n    href: to,\n    onClick: ev => {\n      if (onClick) {\n        onClick(ev);\n      }\n\n      if (!utils_1.isModifiedEvent(ev) && ctx.pushState && to && !utils_1.isOutsideLink(to)) {\n        ev.preventDefault();\n        ctx.pushState(to);\n      }\n    }\n  }), React.createElement(Content, null, props.children), icon && React.createElement(Icon_1.default, {\n    name: icon,\n    size: 12\n  })));\n};\n\nexports.default = Breadcrumb;","map":null,"metadata":{},"sourceType":"script"}