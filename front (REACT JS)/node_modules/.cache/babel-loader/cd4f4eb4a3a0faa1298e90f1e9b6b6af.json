{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _taggedTemplateLiteral = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject5() {\n  const data = _taggedTemplateLiteral([\"\\n  label: AccordionFocus;\\n  position: absolute;\\n  width: 100%;\\n  height: 100%;\\n  top: 0;\\n  left: 0;\\n  /* we show it above other elements so that shadow would be visible, but we disable all events for it */\\n  pointer-events: none;\\n  \", \"\\n\"]);\n\n  _templateObject5 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  const data = _taggedTemplateLiteral([\"\\n  align-content: flex-end;\\n\"]);\n\n  _templateObject4 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  const data = _taggedTemplateLiteral([\"\\n  label: AccordionPanel;\\n  /* we need it because of overflow: hidden; above */\\n  overflow: auto;\\n  height: 100%;\\n  padding: \", \"px;\\n  background-color: \", \";\\n\"]);\n\n  _templateObject3 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  const data = _taggedTemplateLiteral([\"\\n  label: AccordionSection;\\n  /* to make sure it respects parrent grid's row height */\\n  overflow: hidden;\\n  /* to fix overflow: hidden above, otherwise header can disappear */\\n  display: grid;\\n  grid-template-rows: \", \";\\n  /* for Focus */\\n  position: relative;\\n\"]);\n\n  _templateObject2 = function () {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  label: Accordion;\\n  height: 100%;\\n  display: grid;\\n  grid-template-rows: \", \";\\n  border: solid 1px \", \";\\n  border-top: none;\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst SectionHeader_1 = require(\"../Internals/SectionHeader\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Container = styled_1.default(\"div\")(_templateObject(), ({\n  theme,\n  sections\n}) => sections.map(({\n  expanded\n}) => expanded ? \"1fr\" : \"\".concat(theme.space.element * 2, \"px\")).join(\" \"), ({\n  theme\n}) => theme.color.separators.default);\nconst AccordionSection = styled_1.default(\"div\")(_templateObject2(), ({\n  theme\n}) => {\n  const headerHeight = theme.space.element * 2;\n  return \"\".concat(headerHeight, \"px calc(100% - \").concat(headerHeight, \"px)\");\n});\nconst Header = styled_1.default(SectionHeader_1.SectionHeader)(({\n  theme,\n  expanded\n}) => ({\n  cursor: \"pointer\",\n  borderTop: \"1px solid \".concat(theme.color.separators.default),\n  borderBottom: \"1px solid \".concat(expanded ? theme.color.separators.default : theme.color.background.lighter),\n  // disable browser focus to customise focus state\n  \":focus\": {\n    outline: \"none\"\n  }\n}));\nHeader.defaultProps = {\n  role: \"button\",\n  \"aria-disabled\": false\n};\nconst Panel = styled_1.default(\"div\")(_templateObject3(), ({\n  theme\n}) => theme.space.element, ({\n  theme\n}) => theme.color.white);\nPanel.defaultProps = {\n  role: \"region\"\n};\nconst Chevron = styled_1.default(Icon_1.default)(_templateObject4());\nChevron.defaultProps = {\n  size: 14\n};\nconst Focus = styled_1.default(\"div\")(_templateObject5(), ({\n  theme\n}) => \"box-shadow: \".concat(theme.shadows.insetFocus, \";\"));\n\nconst Accordion = _a => {\n  var sections = _a.sections,\n      onToggle = _a.onToggle,\n      rest = __rest(_a, [\"sections\", \"onToggle\"]); // this ref is used to detect if visitor uses mouse or keyboard\n  // and show focuse state in case of keyboard\n\n\n  const isMouseRef = React.useRef(false);\n\n  const _React$useState = React.useState(null),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        focusIndex = _React$useState2[0],\n        setFocusIndex = _React$useState2[1];\n\n  return React.createElement(Container, Object.assign({\n    sections: sections,\n    onMouseDown: () => {\n      isMouseRef.current = true;\n    },\n    onKeyDown: () => {\n      isMouseRef.current = false;\n    },\n    \"data-cy\": \"operational-ui__Accordion\"\n  }, rest), sections.map(({\n    title,\n    content,\n    expanded,\n    key\n  }, i) => {\n    const titleId = \"accordion-heading-\".concat(key);\n    const contentId = \"accordion-panel-\".concat(key);\n\n    const toggle = () => {\n      isMouseRef.current = false;\n      onToggle(i);\n    };\n\n    return React.createElement(AccordionSection, {\n      expanded: expanded,\n      key: key\n    }, React.createElement(Header, {\n      id: titleId,\n      \"aria-controls\": contentId,\n      \"aria-expanded\": expanded,\n      tabIndex: 0,\n      onClick: toggle,\n      onKeyPress: toggle,\n      expanded: expanded,\n      onFocus: () => {\n        if (!isMouseRef.current) {\n          setFocusIndex(i);\n        }\n      },\n      onBlur: () => setFocusIndex(null)\n    }, title, React.createElement(Chevron, {\n      name: expanded ? \"ChevronUp\" : \"ChevronDown\"\n    })), React.createElement(Panel, {\n      id: contentId,\n      \"aria-labelledby\": titleId,\n      hidden: !expanded\n    }, expanded && content()), focusIndex === i ? React.createElement(Focus, null) : null);\n  }));\n};\n\nexports.default = Accordion;","map":null,"metadata":{},"sourceType":"script"}