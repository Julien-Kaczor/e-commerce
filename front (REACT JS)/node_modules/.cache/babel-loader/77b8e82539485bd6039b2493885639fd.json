{"ast":null,"code":"\"use strict\";\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst __1 = require(\"../\");\n\nconst utils_1 = require(\"../utils\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Container = styled_1.default(\"div\")(({\n  theme,\n  selected\n}) => {\n  const backgroundColor = selected ? theme.color.background.lighter : theme.color.white;\n  return {\n    backgroundColor,\n    display: \"flex\",\n    alignItems: \"center\",\n    position: \"relative\",\n    padding: \"\".concat(theme.space.small, \"px \").concat(theme.space.content, \"px\"),\n    wordWrap: \"break-word\",\n    outline: \"none\",\n    borderTop: \"1px solid\",\n    borderColor: utils_1.darken(backgroundColor, 10),\n    color: theme.color.text.default,\n    \":hover\": {\n      backgroundColor: utils_1.darken(backgroundColor, 5)\n    }\n  };\n});\nconst IconContainer = styled_1.default(\"div\")(({\n  theme\n}) => {\n  const size = 18;\n  return {\n    display: \"flex\",\n    alignItems: \"center\",\n    flex: \"1 0\",\n    flexBasis: size,\n    justifyContent: \"center\",\n    maxWidth: size,\n    height: size,\n    backgroundColor: theme.color.primary,\n    borderRadius: \"50%\",\n    marginLeft: \"auto\",\n    \"& svg\": {\n      color: theme.color.white,\n      width: 12,\n      height: 12\n    }\n  };\n});\n\nconst SelectOption = props => React.createElement(Container, {\n  key: props.id,\n  className: props.className,\n  selected: Boolean(props.selected),\n  tabIndex: -2,\n  role: \"option\",\n  \"aria-selected\": props.selected,\n  onClick: ev => {\n    ev.stopPropagation();\n\n    if (props.onClick) {\n      props.onClick();\n    }\n  }\n}, props.children, props.selected ? React.createElement(IconContainer, null, React.createElement(__1.Icon, {\n  name: \"Yes\",\n  size: 10\n})) : null);\n\nexports.default = SelectOption;","map":null,"metadata":{},"sourceType":"script"}