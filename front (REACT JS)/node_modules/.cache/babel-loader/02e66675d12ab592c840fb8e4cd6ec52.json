{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar _taggedTemplateLiteral = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  max-height: 80vh;\\n  max-width: 80vw;\\n  overflow: auto;\\n  width: fit-content;\\n  height: 100%;\\n\\n  img {\\n    max-width: 100%;\\n  }\\n\\n  p {\\n    font-size: \", \"px;\\n    line-height: 1.3;\\n    margin: 0;\\n    padding: 2px 6px;\\n    text-align: center;\\n  }\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst useWindowSize_1 = __importDefault(require(\"../useWindowSize\"));\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Tooltip_Container_1 = __importDefault(require(\"./Tooltip.Container\"));\n\nconst getPosition = props => {\n  let position = \"right\";\n\n  if (props.left) {\n    position = \"left\";\n  }\n\n  if (props.right) {\n    position = \"right\";\n  }\n\n  if (props.bottom) {\n    position = \"bottom\";\n  }\n\n  if (props.top) {\n    position = \"top\";\n  }\n\n  return position;\n};\n\nconst getDisplayPosition = (windowSize, state, props) => {\n  let position = getPosition(props);\n  /** Swap the positions of tooltips in case they are clipped in this particular viewport */\n\n  if (props.smart) {\n    if (state.bbLeft < 0 && position === \"left\") {\n      position = \"right\";\n    }\n\n    if (state.bbTop < 0 && position === \"top\") {\n      position = \"bottom\";\n    }\n\n    if (state.bbRight > windowSize.width && position === \"right\") {\n      position = \"left\";\n    }\n\n    if (state.bbBottom > windowSize.height && position === \"bottom\") {\n      position = \"top\";\n    }\n  }\n\n  return position;\n};\n/*\n * This class name is used as a selector when customizing the opacity for tooltips\n * that are only displayed when a particular parent of theirs is hovered.\n * The pattern replaces the https://emotion.sh/docs/babel#components-as-selectors\n * pattern to remove the need for babel plugin dependancy in projects that rely on\n * this library.\n */\n\n\nexports.dangerousTooltipContainerClassName = \"operational-ui-tooltip\";\nconst SizeRestriction = styled_1.default(\"div\")(_templateObject(), ({\n  theme\n}) => theme.font.size.tiny);\n\nconst Tooltip = props => {\n  const containerNode = React.useRef(null);\n  const offScreenWidthTestNode = React.useRef(null);\n\n  const _React$useState = React.useState({\n    bbTop: 0,\n    bbLeft: 0,\n    bbRight: 0,\n    bbBottom: 0,\n    singleLineTextWidth: 0\n  }),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        state = _React$useState2[0],\n        setState = _React$useState2[1];\n\n  React.useEffect(() => {\n    if (!offScreenWidthTestNode.current || !containerNode.current) {\n      return;\n    }\n\n    const bbOffScreen = offScreenWidthTestNode.current.getBoundingClientRect();\n    const bbRect = containerNode.current.getBoundingClientRect();\n    setState({\n      bbTop: bbRect.top,\n      bbBottom: bbRect.bottom,\n      bbLeft: bbRect.left,\n      bbRight: bbRect.right,\n      singleLineTextWidth: bbOffScreen.width\n    });\n  }, []);\n  const windowSize = useWindowSize_1.default();\n  const displayPosition = getDisplayPosition(windowSize, state, props);\n  return React.createElement(React.Fragment, null, React.createElement(Tooltip_Container_1.default, {\n    position: \"bottom\",\n    offScreenWidthTest: true,\n    singleLineTextWidth: state.singleLineTextWidth,\n    ref: offScreenWidthTestNode\n  }, React.createElement(\"p\", null, props.children)), React.createElement(Tooltip_Container_1.default, {\n    role: \"tooltip\",\n    className: exports.dangerousTooltipContainerClassName,\n    singleLineTextWidth: state.singleLineTextWidth,\n    position: displayPosition,\n    ref: containerNode\n  }, React.createElement(SizeRestriction, null, React.createElement(\"p\", {\n    id: props.textId\n  }, props.children))));\n};\n\nexports.default = Tooltip;","map":null,"metadata":{},"sourceType":"script"}