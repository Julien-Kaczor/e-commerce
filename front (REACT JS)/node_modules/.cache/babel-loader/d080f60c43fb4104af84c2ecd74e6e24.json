{"ast":null,"code":"\"use strict\";\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  return t;\n};\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst OperationalContext_1 = __importDefault(require(\"../OperationalContext/OperationalContext\"));\n\nconst Spinner_1 = __importDefault(require(\"../Spinner/Spinner\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst constants_1 = require(\"../utils/constants\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst makeColors = (theme, color) => {\n  const defaultColor = theme.color.white;\n  const backgroundColors = {\n    grey: theme.color.background.light,\n    warning: defaultColor\n  };\n  const textColors = {\n    grey: theme.color.text.action,\n    warning: theme.color.error\n  };\n  const backgroundColor = backgroundColors[color] || constants_1.expandColor(theme, color) || defaultColor;\n  const textColor = textColors[color] || utils_1.readableTextColor(backgroundColor, [theme.color.text.default, theme.color.white]);\n  return {\n    background: backgroundColor,\n    foreground: textColor\n  };\n};\n\nconst ButtonSpinner = styled_1.default(Spinner_1.default)(({\n  theme,\n  containerColor\n}) => ({\n  position: \"absolute\",\n  top: \"50%\",\n  left: \"50%\",\n  transform: \"translate3d(-50%, -50%, 0)\",\n  color: makeColors(theme, containerColor || \"\").foreground\n}));\nconst BaseButton = styled_1.default(\"button\")(({\n  theme,\n  color_,\n  disabled,\n  condensed,\n  loading,\n  fullWidth,\n  textColor\n}) => {\n  const _makeColors = makeColors(theme, color_ || \"\"),\n        backgroundColor = _makeColors.background,\n        foregroundColor = _makeColors.foreground;\n\n  return Object.assign({\n    backgroundColor,\n    lineHeight: \"\".concat(condensed ? 28 : 36, \"px\"),\n    fontSize: theme.font.size.small,\n    fontFamily: theme.font.family.main,\n    fontWeight: theme.font.weight.medium,\n    display: \"inline-flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    padding: \"0 \".concat(condensed ? theme.space.medium : theme.space.element, \"px\"),\n    borderRadius: theme.borderRadius,\n    border: 0,\n    boxShadow: utils_1.isWhite(backgroundColor) ? \"0 0 0 1px \".concat(theme.color.border.disabled, \" inset\") : \"none\",\n    cursor: disabled ? \"not-allowed\" : \"pointer\",\n    opacity: disabled ? 0.6 : 1.0,\n    outline: \"none\",\n    position: \"relative\",\n    width: fullWidth ? \"100%\" : \"initial\",\n    marginRight: theme.space.small,\n    // Apply styles with increased specificity to override defaults\n    \"&, a:link&, a:visited&\": {\n      textDecoration: \"none\",\n      color: loading ? \"transparent\" : constants_1.expandColor(theme, textColor) || foregroundColor\n    },\n    \":focus\": Object.assign({}, utils_1.inputFocus({\n      theme,\n      isError: color_ === \"error\"\n    }))\n  }, !disabled ? {\n    \":hover\": {\n      backgroundColor: utils_1.darken(backgroundColor, 5)\n    }\n  } : {});\n});\n\nconst Button = _a => {\n  var to = _a.to,\n      children = _a.children,\n      icon = _a.icon,\n      iconPosition = _a.iconPosition,\n      _a$iconSize = _a.iconSize,\n      iconSize = _a$iconSize === void 0 ? 18 : _a$iconSize,\n      iconColor = _a.iconColor,\n      color = _a.color,\n      onClick = _a.onClick,\n      tabIndex = _a.tabIndex,\n      props = __rest(_a, [\"to\", \"children\", \"icon\", \"iconPosition\", \"iconSize\", \"iconColor\", \"color\", \"onClick\", \"tabIndex\"]);\n\n  const iconProps = {\n    name: icon,\n    size: iconSize,\n    color: iconColor\n  };\n  return React.createElement(OperationalContext_1.default, null, ctx => React.createElement(BaseButton, Object.assign({}, props, {\n    as: to ? \"a\" : undefined,\n    role: \"button\",\n    \"aria-label\": typeof children === \"string\" ? children : undefined,\n    tabIndex: tabIndex,\n    color_: color,\n    href: to,\n    onClick: ev => {\n      if (props.disabled) {\n        ev.preventDefault();\n        return;\n      }\n\n      if (onClick) {\n        onClick();\n      }\n\n      if (!utils_1.isModifiedEvent(ev) && ctx.pushState && to && !utils_1.isOutsideLink(to)) {\n        ev.preventDefault();\n        ctx.pushState(to);\n      }\n    },\n    title: props.loading && children === String(children) ? String(children) : undefined\n  }), icon && iconPosition === \"start\" && React.createElement(Icon_1.default, Object.assign({\n    left: true\n  }, iconProps)), children, icon && iconPosition === \"end\" && React.createElement(Icon_1.default, Object.assign({\n    right: true\n  }, iconProps)), props.loading && React.createElement(ButtonSpinner, {\n    containerColor: color\n  })));\n};\n\nButton.defaultProps = {\n  iconPosition: \"end\"\n};\nexports.default = Button;","map":null,"metadata":{},"sourceType":"script"}