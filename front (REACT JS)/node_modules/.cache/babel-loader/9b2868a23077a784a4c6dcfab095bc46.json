{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst DatePicker_styles_1 = require(\"./DatePicker.styles\");\n\nconst DatePicker_utils_1 = require(\"./DatePicker.utils\");\n\nconst setNewDate = (date, current) => {\n  const start = current.start,\n        end = current.end;\n  const newStart = start && !end ? start : date;\n  const newEnd = start && !end ? date : start && end ? null : end;\n\n  const _sort = [newStart, newEnd].sort(),\n        _sort2 = _slicedToArray(_sort, 2),\n        sortedNewStart = _sort2[0],\n        sortedNewEnd = _sort2[1];\n\n  return {\n    start: sortedNewStart || undefined,\n    end: sortedNewEnd || undefined\n  };\n};\n\nconst isSelected = (date, current) => {\n  const start = current.start,\n        end = current.end;\n  return date === start || date === end || !!start && !!end && date >= start && date <= end;\n};\n\nconst Month = ({\n  year,\n  month,\n  start,\n  end,\n  onChange,\n  min,\n  max\n}) => {\n  const prevPlaceholderDays = DatePicker_utils_1.monthStartDay(year, month);\n  const nextMonth = month === 11 ? 0 : month + 1;\n  const nextYear = month === 11 ? year + 1 : year;\n  const prevMonth = month === 0 ? 11 : month - 1;\n  const prevYear = month === 0 ? year - 1 : year;\n  const daysInCurrentMonth = DatePicker_utils_1.daysInMonth(month, year);\n  const daysInPreviousMonth = DatePicker_utils_1.daysInMonth(prevMonth, prevYear);\n  const nextPlaceholderDays = (daysInCurrentMonth + prevPlaceholderDays) % 7 === 0 ? 0 : 7 - (daysInCurrentMonth + prevPlaceholderDays) % 7;\n  return React.createElement(DatePicker_styles_1.Days, null, [\"S\", \"M\", \"T\", \"W\", \"T\", \"F\", \"S\"].map((dayName, index) => React.createElement(DatePicker_styles_1.DayOfWeek, {\n    key: \"\".concat(index, \"-\").concat(dayName)\n  }, dayName)), DatePicker_utils_1.range(prevPlaceholderDays).map((_, index) => {\n    const day = daysInPreviousMonth + index - prevPlaceholderDays;\n    const date = DatePicker_utils_1.toDate(prevYear, prevMonth, day);\n    const isDisabled = Boolean(min && date < min || max && date > max);\n    return React.createElement(DatePicker_styles_1.Day, {\n      selected: isSelected(date, {\n        start,\n        end\n      }),\n      isPlaceholder: true,\n      key: index,\n      isDisabled: isDisabled,\n      onClick: ev => {\n        ev.preventDefault();\n\n        if (isDisabled) {\n          return;\n        }\n\n        if (onChange) {\n          onChange(setNewDate(date, {\n            start,\n            end\n          }));\n        }\n      }\n    }, day + 1);\n  }), DatePicker_utils_1.range(daysInCurrentMonth).map((_, index) => {\n    const date = DatePicker_utils_1.toDate(year, month, index);\n    const isDisabled = Boolean(min && date < min || max && date > max);\n    return React.createElement(DatePicker_styles_1.Day, {\n      selected: isSelected(date, {\n        start,\n        end\n      }),\n      key: index,\n      isDisabled: isDisabled,\n      onClick: ev => {\n        ev.preventDefault();\n\n        if (isDisabled) {\n          return;\n        }\n\n        if (onChange) {\n          onChange(setNewDate(date, {\n            start,\n            end\n          }));\n        }\n      }\n    }, index + 1);\n  }), DatePicker_utils_1.range(nextPlaceholderDays).map((number, index) => {\n    const date = DatePicker_utils_1.toDate(nextYear, nextMonth, number);\n    const isDisabled = Boolean(min && date < min || max && date > max);\n    return React.createElement(DatePicker_styles_1.Day, {\n      key: index,\n      selected: isSelected(date, {\n        start,\n        end\n      }),\n      isDisabled: isDisabled,\n      isPlaceholder: true,\n      onClick: ev => {\n        ev.preventDefault();\n\n        if (isDisabled) {\n          return;\n        }\n\n        if (onChange) {\n          onChange(setNewDate(date, {\n            start,\n            end\n          }));\n        }\n      }\n    }, number + 1);\n  }));\n};\n\nexports.default = Month;","map":null,"metadata":{},"sourceType":"script"}