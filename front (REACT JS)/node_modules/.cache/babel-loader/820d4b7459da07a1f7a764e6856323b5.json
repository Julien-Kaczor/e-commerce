{"ast":null,"code":"\"use strict\";\n\nvar _slicedToArray = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/slicedToArray\");\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n/**\n * `initialSections` is intial state, the same way as argument in `useState`\n *\n * @param initialSections Section[]\n */\n\n\nexports.useAccordionState = initialSections => {\n  const _React$useState = React.useState(initialSections),\n        _React$useState2 = _slicedToArray(_React$useState, 2),\n        stateSections = _React$useState2[0],\n        updateSections = _React$useState2[1];\n\n  const onToggle = React.useCallback(index => {\n    if (index < 0 || index >= stateSections.length) {\n      throw new Error(\"index out of bounds: \".concat(index));\n    }\n\n    const newSections = [...stateSections];\n    newSections[index] = Object.assign({}, newSections[index], {\n      expanded: !newSections[index].expanded\n    });\n    updateSections(newSections);\n  }, [stateSections]);\n  return [stateSections, onToggle];\n};","map":null,"metadata":{},"sourceType":"script"}