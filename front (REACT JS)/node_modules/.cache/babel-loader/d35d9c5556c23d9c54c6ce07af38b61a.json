{"ast":null,"code":"\"use strict\";\n\nvar _taggedTemplateLiteral = require(\"/home/julien-pc/Bureau/PROJECT/e-commerce/front/node_modules/@babel/runtime/helpers/taggedTemplateLiteral\");\n\nfunction _templateObject() {\n  const data = _taggedTemplateLiteral([\"\\n  width: \", \"px;\\n  /** Makes sure the button doesn't shrink when inside a flex container */\\n  flex: 0 0 \", \"px;\\n  height: \", \"px;\\n  top: 0px;\\n  left: 0px;\\n  display: flex;\\n  align-items: center;\\n  justify-content: center;\\n  cursor: pointer;\\n\\n  :focus {\\n    \", \"\\n    border: 1px solid \", \";\\n  }\\n\\n  /* Don't respond to children's pointer-events */\\n  * {\\n    pointer-events: none;\\n  }\\n  \", \";\\n\"]);\n\n  _templateObject = function () {\n    return data;\n  };\n\n  return data;\n}\n\nvar __importStar = this && this.__importStar || function (mod) {\n  if (mod && mod.__esModule) return mod;\n  var result = {};\n  if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\n  result[\"default\"] = mod;\n  return result;\n};\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nconst React = __importStar(require(\"react\"));\n\nconst react_copy_to_clipboard_1 = __importDefault(require(\"react-copy-to-clipboard\"));\n\nconst Icon_1 = __importDefault(require(\"../Icon/Icon\"));\n\nconst OperationalContext_1 = __importDefault(require(\"../OperationalContext/OperationalContext\"));\n\nconst utils_1 = require(\"../utils\");\n\nconst styled_1 = __importDefault(require(\"../utils/styled\"));\n\nconst Input_constants_1 = require(\"./Input.constants\");\n\nconst Button = styled_1.default(\"button\")(_templateObject(), Input_constants_1.height, Input_constants_1.height, Input_constants_1.height, utils_1.inputFocus, ({\n  theme\n}) => theme.color.primary, ({\n  theme\n}) => \"\\n    background-color: \".concat(theme.color.background.lighter, \";\\n    border-top-left-radius: \").concat(theme.borderRadius, \"px;\\n    border-bottom-left-radius: \").concat(theme.borderRadius, \"px;\\n    border: 1px solid;\\n    border-color: \").concat(theme.color.border.default, \";\\n    color: \").concat(theme.color.text.light, \";\\n    &:hover {\\n      background-color: \").concat(theme.color.background.light, \";\\n    }\\n  \"));\n\nconst InputButton = ({\n  tabIndex,\n  icon,\n  copy,\n  value,\n  onIconClick\n}) => {\n  if (!icon && !copy) {\n    return null;\n  }\n\n  return copy === true ? React.createElement(OperationalContext_1.default, null, ({\n    pushMessage\n  }) => React.createElement(react_copy_to_clipboard_1.default, {\n    text: value || \"\",\n    onCopy: () => pushMessage({\n      body: \"Copied to clipboard\",\n      type: \"info\"\n    })\n  }, React.createElement(Button, {\n    tabIndex: tabIndex\n  }, React.createElement(Icon_1.default, {\n    name: \"Copy\",\n    size: 16\n  })))) : React.createElement(Button, {\n    onClick: onIconClick\n  }, typeof icon === \"string\" ? React.createElement(Icon_1.default, {\n    name: icon,\n    size: 16\n  }) : icon);\n};\n\nexports.default = InputButton;","map":null,"metadata":{},"sourceType":"script"}