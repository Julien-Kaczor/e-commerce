"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const styled_1 = __importDefault(require("../utils/styled"));
const width = 28;
const height = 16;
const railHeight = 16;
const Container = styled_1.default("div")({
    display: "inline-flex",
    alignItems: "center",
});
const RailContainer = styled_1.default("div")({
    width,
    height,
    label: "switch",
    position: "relative",
    borderRadius: height / 2,
    overflow: "hidden",
    cursor: "pointer",
}, ({ theme, left, right }) => ({
    marginLeft: left ? theme.space.base : 0,
    marginRight: right ? theme.space.base : 0,
}));
const Button = styled_1.default("div")({
    height,
    transition: "transform .3s",
    position: "absolute",
    top: 0,
    left: 0,
    content: `" "`,
    width: height,
    borderRadius: "50%",
}, ({ on, theme }) => ({
    transform: `translate3d(${on ? width - height : 0}px, 0, 0)`,
    backgroundColor: theme.color.white,
    border: `1px solid ${on ? theme.color.primary : theme.color.border.default}`,
    zIndex: theme.zIndex.switch + 1,
}));
const Rail = styled_1.default("div")({
    width,
    height: railHeight,
    position: "absolute",
    top: (height - railHeight) / 2,
    left: 0,
    borderRadius: railHeight / 2,
    overflow: "hidden",
}, ({ on, theme }) => ({
    backgroundColor: theme.color.background.mediumDark,
    zIndex: theme.zIndex.switch,
    "&:after": {
        content: `" "`,
        position: "absolute",
        width: "100%",
        height: "100%",
        top: 0,
        left: -height / 2,
        backgroundColor: theme.color.primary,
        transition: "transform .3s",
        transform: `translate3d(${on ? "0" : "-100%"}, 0, 0)`,
        zIndex: theme.zIndex.switch - 1,
    },
}));
const Switch = (_a) => {
    var { on, onChange, left, right } = _a, props = __rest(_a, ["on", "onChange", "left", "right"]);
    return (React.createElement(Container, Object.assign({}, props),
        left,
        React.createElement(RailContainer, { left: left, right: right, onClick: () => {
                if (onChange) {
                    onChange(!on);
                }
            } },
            React.createElement(Button, { on: on }),
            React.createElement(Rail, { on: on })),
        right));
};
exports.default = Switch;
//# sourceMappingURL=Switch.js.map