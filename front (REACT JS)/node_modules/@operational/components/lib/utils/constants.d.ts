declare type FontWeight = 400 | 500 | 600;
/**
 * A container of space-related constants to be
 * used throughout Operational UI.
 */
export declare const space: {
    /** Base space is `4px` */
    base: number;
    /** Small space is `8px` */
    small: number;
    /** Medium space is `12px` */
    medium: number;
    /** Content space is `16px` */
    content: number;
    /** Element space is `20px` */
    element: number;
    /** Big space is `28px` */
    big: number;
};
declare const constants: {
    font: {
        family: {
            main: string;
            code: string;
        };
        /** 1.4 */
        lineHeight: number;
        size: {
            /** 16px */
            title: number;
            /** 14px */
            body: number;
            /** 13px */
            small: number;
            /** 12px */
            fineprint: number;
            /** 11px */
            tiny: number;
        };
        weight: {
            /** 400 */
            regular: FontWeight;
            /** 500 */
            medium: FontWeight;
            /** 600 */
            bold: FontWeight;
        };
    };
    space: {
        /** Base space is `4px` */
        base: number;
        /** Small space is `8px` */
        small: number;
        /** Medium space is `12px` */
        medium: number;
        /** Content space is `16px` */
        content: number;
        /** Element space is `20px` */
        element: number;
        /** Big space is `28px` */
        big: number;
    };
    zIndex: {
        /** `0` */
        default: number;
        /** `300` */
        selectOptions: number;
        /** `299` */
        formFieldError: number;
        /** `400` */
        tooltip: number;
        /** `500` */
        modal: number;
        /** `600` */
        confirm: number;
        /** `1000` */
        debugViewer: number;
        /** `299` */
        globalProgress: number;
        /** `2000` */
        messages: number;
        /** `100` */
        switch: number;
    };
    color: {
        primary: string;
        /** `#f5f5f5` */
        disabled: string;
        /** `#ffbd41` */
        warning: string;
        /** `#0c991d` */
        success: string;
        /** `#9a0000` */
        error: string;
        /** `#636363` */
        basic: string;
        ghost: string;
        white: string;
        /** `#fff26666` */
        highlight: string;
        /** `#000` */
        black: string;
        background: {
            /** `#2a2e37` */
            dark: string;
            /** `#999` */
            mediumDark: string;
            /** `#ececec` */
            light: string;
            /** `#f2f4f6` */
            lighter: string;
            /** `#f8f8f8` */
            lightest: string;
            /** `#fcfcfc` */
            almostWhite: string;
        };
        separators: {
            /** `#768f9e` */
            dark: string;
            /** `#bfcbd2` */
            default: string;
            /** `#d7dfe3` */
            light: string;
        };
        text: {
            /** `#333` */
            dark: string;
            /** `#545454` */
            default: string;
            /** `#c0c0c0` */
            disabled: string;
            /** `#666` */
            light: string;
            /** `#747474` */
            lighter: string;
            /** `#909090` */
            lightest: string;
            /** primary color */
            action: string;
            white: string;
        };
        border: {
            /** `#c0c0c0` */
            default: string;
            /** `#d8d8d8` */
            disabled: string;
            /** `#eee` */
            invisible: string;
            /** `#eee` */
            medium: string;
            /** `#f3f3f3` */
            lightest: string;
        };
        palette: string[];
    };
    shadows: {
        pressed: string;
        topBar: string;
        focus: string;
        insetFocus: string;
        popup: string;
        card: string;
    };
    borderRadius: number;
    compactSidebarWidth: number;
    sidebarWidth: number;
    topbarHeight: number;
    titleHeight: number;
};
export declare const expandColor: (theme: Readonly<{
    font: {
        family: {
            main: string;
            code: string;
        };
        /** 1.4 */
        lineHeight: number;
        size: {
            /** 16px */
            title: number;
            /** 14px */
            body: number;
            /** 13px */
            small: number;
            /** 12px */
            fineprint: number;
            /** 11px */
            tiny: number;
        };
        weight: {
            /** 400 */
            regular: FontWeight;
            /** 500 */
            medium: FontWeight;
            /** 600 */
            bold: FontWeight;
        };
    };
    space: {
        /** Base space is `4px` */
        base: number;
        /** Small space is `8px` */
        small: number;
        /** Medium space is `12px` */
        medium: number;
        /** Content space is `16px` */
        content: number;
        /** Element space is `20px` */
        element: number;
        /** Big space is `28px` */
        big: number;
    };
    zIndex: {
        /** `0` */
        default: number;
        /** `300` */
        selectOptions: number;
        /** `299` */
        formFieldError: number;
        /** `400` */
        tooltip: number;
        /** `500` */
        modal: number;
        /** `600` */
        confirm: number;
        /** `1000` */
        debugViewer: number;
        /** `299` */
        globalProgress: number;
        /** `2000` */
        messages: number;
        /** `100` */
        switch: number;
    };
    color: {
        primary: string;
        /** `#f5f5f5` */
        disabled: string;
        /** `#ffbd41` */
        warning: string;
        /** `#0c991d` */
        success: string;
        /** `#9a0000` */
        error: string;
        /** `#636363` */
        basic: string;
        ghost: string;
        white: string;
        /** `#fff26666` */
        highlight: string;
        /** `#000` */
        black: string;
        background: {
            /** `#2a2e37` */
            dark: string;
            /** `#999` */
            mediumDark: string;
            /** `#ececec` */
            light: string;
            /** `#f2f4f6` */
            lighter: string;
            /** `#f8f8f8` */
            lightest: string;
            /** `#fcfcfc` */
            almostWhite: string;
        };
        separators: {
            /** `#768f9e` */
            dark: string;
            /** `#bfcbd2` */
            default: string;
            /** `#d7dfe3` */
            light: string;
        };
        text: {
            /** `#333` */
            dark: string;
            /** `#545454` */
            default: string;
            /** `#c0c0c0` */
            disabled: string;
            /** `#666` */
            light: string;
            /** `#747474` */
            lighter: string;
            /** `#909090` */
            lightest: string;
            /** primary color */
            action: string;
            white: string;
        };
        border: {
            /** `#c0c0c0` */
            default: string;
            /** `#d8d8d8` */
            disabled: string;
            /** `#eee` */
            invisible: string;
            /** `#eee` */
            medium: string;
            /** `#f3f3f3` */
            lightest: string;
        };
        palette: string[];
    };
    shadows: {
        pressed: string;
        topBar: string;
        focus: string;
        insetFocus: string;
        popup: string;
        card: string;
    };
    borderRadius: number;
    compactSidebarWidth: number;
    sidebarWidth: number;
    topbarHeight: number;
    titleHeight: number;
}>, colorToBeExpanded?: string | undefined) => string | null;
export declare type OperationalStyleConstants = Readonly<typeof constants>;
export default constants;
