"use strict";
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const Icon_1 = __importDefault(require("../Icon/Icon"));
const Body_1 = __importDefault(require("../Typography/Body"));
const styled_1 = __importDefault(require("../utils/styled"));
const headerHeight = 43;
const Container = styled_1.default("div") `
  background-color: ${({ theme }) => theme.color.background.lighter};
  border: 1px solid ${({ theme }) => theme.color.border.disabled};
  padding: ${({ theme }) => theme.space.medium}px;
  min-height: ${({ collapsed, minHeight }) => (collapsed ? 0 : `${minHeight}px`)};
  height: ${({ collapsed }) => (collapsed ? `${headerHeight}px` : "auto")};
`;
const Header = styled_1.default("div") `
  position: relative;
  display: flex;
  align-items: center;
  line-height: 1;
  padding: ${({ theme }) => theme.space.medium}px;
  margin: ${({ theme }) => theme.space.medium * -1}px;
  margin-bottom: ${({ theme, collapsed }) => (collapsed ? 0 : `${theme.space.content}px`)};
  height: ${headerHeight}px; /* in order to prevent browsers from guessing */
`;
const HeaderText = styled_1.default(Body_1.default) `
  margin: 0 0 0 ${({ theme, hasIcon }) => (hasIcon ? theme.space.content : 0)}px;
  font-weight: ${({ theme }) => theme.font.weight.medium};
  color: ${({ theme }) => theme.color.text.lighter};
`;
const Group = ({ title, icon, iconColor, children, collapsed, minHeight }) => (React.createElement(Container, { minHeight: minHeight, collapsed: Boolean(collapsed) },
    (title || icon) && (React.createElement(Header, { collapsed: Boolean(collapsed) },
        icon && React.createElement(Icon_1.default, { color: iconColor, name: icon }),
        " ",
        React.createElement(HeaderText, { hasIcon: Boolean(icon) }, title))),
    collapsed === false && children));
Group.defaultProps = {
    collapsed: false,
    minHeight: 0,
};
exports.default = Group;
//# sourceMappingURL=Group.js.map