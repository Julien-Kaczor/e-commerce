"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const react_1 = require("react");
/**
 * Hook for linking some hotkey to a callback function
 *
 * @param containerNode - A ref to an HTMLElement, scoping the hotkey binding
 * @param key - hotkey definition object
 * @param callback- a callback to be invoked when the hotkey is hit
 *
 */
function useHotkey(containerNode, hotkey, callback) {
    const callbackRef = react_1.useRef(callback);
    react_1.useEffect(() => {
        callbackRef.current = callback;
    }, [callback]);
    react_1.useEffect(() => {
        const addKeyBinding = () => {
            if (containerNode.current) {
                containerNode.current.addEventListener("keydown", keyDownHandler, true);
            }
        };
        const removeKeyBinding = () => {
            if (containerNode.current) {
                containerNode.current.removeEventListener("keydown", keyDownHandler, true);
            }
        };
        const keyDownHandler = (event) => {
            if (event.key.toLowerCase() !== hotkey.key.toLowerCase()) {
                return;
            }
            if (hotkey.ctrl && !event.ctrlKey) {
                return;
            }
            if (hotkey.shift && !event.shiftKey) {
                return;
            }
            if (hotkey.alt && !event.altKey) {
                return;
            }
            if (hotkey.meta && !event.metaKey) {
                return;
            }
            event.stopPropagation();
            callbackRef.current();
        };
        addKeyBinding();
        return removeKeyBinding;
    }, [containerNode.current]);
}
exports.useHotkey = useHotkey;
exports.default = useHotkey;
//# sourceMappingURL=index.js.map