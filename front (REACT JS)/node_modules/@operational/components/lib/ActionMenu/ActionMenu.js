"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const ContextMenu_1 = __importDefault(require("../ContextMenu/ContextMenu"));
const Icon_1 = __importDefault(require("../Icon/Icon"));
const utils_1 = require("../utils");
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div")(({ theme }) => ({
    height: 35,
    /**
     * `textAlign` is set explicitly for when a parent sets a text-align to right-position this container,
     * leaving its content left-aligned.
     */
    textAlign: "right",
    padding: `0 ${theme.space.content}px`,
    backgroundColor: theme.color.white,
    fontWeight: theme.font.weight.medium,
    borderRadius: theme.borderRadius,
    display: "flex",
    alignItems: "center",
    justifyContent: "flex-end",
    userSelect: "none",
    boxShadow: `0 0 0 1px ${theme.color.separators.light}`,
    cursor: "pointer",
    "&:hover": {
        backgroundColor: utils_1.darken(theme.color.white, 5),
    },
}));
const TitleContainer = styled_1.default("p")(({ theme }) => ({
    minWidth: 90,
    width: "100%",
    whiteSpace: "nowrap",
    overflow: "hidden",
    textOverflow: "ellipsis",
    justifySelf: "flex-start",
    color: theme.color.primary,
    textAlign: "left",
}));
const ClickableIcon = styled_1.default(Icon_1.default) `
  cursor: pointer;
`;
const ActionMenu = (_a) => {
    var { stickyTitle, items, title } = _a, props = __rest(_a, ["stickyTitle", "items", "title"]);
    return (React.createElement(ContextMenu_1.default, Object.assign({ align: "right" }, props, { items: items, condensed: true, embedChildrenInMenu: true }), isOpen => (React.createElement(Container, null,
        (isOpen || stickyTitle) && React.createElement(TitleContainer, null, title),
        React.createElement(ClickableIcon, { color: isOpen || stickyTitle ? "primary" : "color.text.lighter", name: isOpen ? "ChevronUp" : "Menu" })))));
};
ActionMenu.defaultProps = {
    title: "Actions",
};
exports.default = ActionMenu;
//# sourceMappingURL=ActionMenu.js.map