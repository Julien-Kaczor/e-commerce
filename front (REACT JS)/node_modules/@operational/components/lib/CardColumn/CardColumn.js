"use strict";
var __rest = (this && this.__rest) || function (s, e) {
    var t = {};
    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)
        t[p] = s[p];
    if (s != null && typeof Object.getOwnPropertySymbols === "function")
        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) if (e.indexOf(p[i]) < 0)
            t[p[i]] = s[p[i]];
    return t;
};
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];
    result["default"] = mod;
    return result;
};
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const React = __importStar(require("react"));
const styled_1 = __importDefault(require("../utils/styled"));
const Container = styled_1.default("div")(({ theme, contentRight, fullWidth, noPadding }) => (Object.assign({ label: "card-column", height: "min-content", minWidth: 280 / 2, padding: noPadding ? 0 : theme.space.element / 2 }, (fullWidth ? { flex: "1 1 100%", maxWidth: "100%" } : {}), { img: {
        maxWidth: "100%",
    }, textAlign: contentRight ? "right" : "left" })));
const Title = styled_1.default("div")(({ theme }) => ({
    fontFamily: theme.font.family.main,
    fontWeight: theme.font.weight.medium,
    color: theme.color.text.dark,
    fontSize: theme.font.size.body,
    borderBottom: `1px solid ${theme.color.separators.default}`,
    paddingBottom: theme.space.small,
    marginBottom: theme.space.content,
    display: "flex",
    alignItems: "center",
}));
const Tabs = styled_1.default("div") `
  display: flex;
  align-items: center;
  margin-left: ${({ theme }) => theme.space.medium}px;
`;
const Tab = styled_1.default("div") `
  padding: 0 ${({ theme }) => theme.space.content}px;
  color: ${({ theme }) => theme.color.text.lighter};
  font-size: ${({ theme }) => theme.font.size.small}px;
  padding-bottom: ${({ theme }) => theme.space.base}px;
  border-bottom: 2px solid ${({ theme, active }) => (active ? theme.color.text.lighter : "transparent")};
  text-transform: uppercase;
  margin-bottom: ${({ theme }) => -(theme.space.medium + 1)}px;
  cursor: pointer;
`;
const CardColumn = (_a) => {
    var { title, tabs, activeTabName, onTabChange, children } = _a, props = __rest(_a, ["title", "tabs", "activeTabName", "onTabChange", "children"]);
    if (tabs) {
        return (React.createElement(Container, Object.assign({}, props),
            title && (React.createElement(Title, null,
                title,
                React.createElement(Tabs, null, tabs.map(({ name }, index) => (React.createElement(Tab, { key: index, onClick: () => {
                        if (onTabChange) {
                            onTabChange(name);
                        }
                    }, active: activeTabName === name }, name)))))),
            (tabs.find(({ name }) => name === activeTabName) || Object.assign({}, tabs[0])).children));
    }
    return (React.createElement(Container, Object.assign({}, props),
        title && React.createElement(Title, null, title),
        children));
};
exports.default = CardColumn;
//# sourceMappingURL=CardColumn.js.map