import { Omit } from "emotion-theming/types/helper";
import * as React from "react";
import { DraggableProps, DroppableProps, DroppableStateSnapshot } from "react-beautiful-dnd";
interface BaseTree {
    label: string;
    highlight?: boolean;
    initiallyOpen?: boolean;
    tag?: string;
    disabled?: boolean;
    color?: string;
    onClick?: () => void;
    cursor?: string;
    onRemove?: (event: React.MouseEvent<HTMLDivElement, MouseEvent>) => void;
    forwardRef?: (element?: HTMLElement | null) => any;
}
interface TreeWithChildren extends BaseTree {
    childNodes?: Tree[];
    draggableProps?: never;
    droppableProps?: Omit<DroppableProps, "children">;
}
interface TreeWithoutChildren extends BaseTree {
    childNodes?: never;
    draggableProps?: Omit<DraggableProps, "children" | "index">;
    droppableProps?: never;
}
export declare type Tree = TreeWithChildren | TreeWithoutChildren;
export interface TreeProps {
    trees: Tree[];
    droppableProps?: Omit<DroppableProps, "children">;
    placeholder?: React.ComponentType<DroppableStateSnapshot>;
}
declare const Tree: React.SFC<TreeProps>;
export default Tree;
