"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const DataTable_util_1 = require("../DataTable.util");
describe("DataTable: row height calculation", () => {
    it("should return a corresponding number when given a string size", () => {
        expect(DataTable_util_1.getRowHeight("compact")).toEqual(22);
        expect(DataTable_util_1.getRowHeight("regular")).toEqual(DataTable_util_1.defaultRowHeight);
    });
    it("should return a height number value if given a height number value", () => {
        expect(DataTable_util_1.getRowHeight(500)).toEqual(500);
    });
    it("should return a big/regular size for a header even if in compact mode", () => {
        expect(DataTable_util_1.getHeaderRowHeight("compact")).toEqual(DataTable_util_1.defaultRowHeight);
        expect(DataTable_util_1.getHeaderRowHeight("regular")).toEqual(DataTable_util_1.defaultRowHeight);
    });
    it("should return a custom height for a header if given a custom hiehgt", () => {
        expect(DataTable_util_1.getHeaderRowHeight(10e4)).toEqual(10e4);
    });
    it("should return the default when given nothing", () => {
        expect(DataTable_util_1.getHeaderRowHeight(undefined)).toEqual(DataTable_util_1.defaultRowHeight);
    });
});
//# sourceMappingURL=DataTable.util.test.js.map